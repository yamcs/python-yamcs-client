# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: yamcs/api/exception.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'yamcs/api/exception.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19yamcs/api/exception.proto\x12\tyamcs.api\x1a\x19google/protobuf/any.proto\"a\n\x10\x45xceptionMessage\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0b\n\x03msg\x18\x03 \x01(\t\x12$\n\x06\x64\x65tail\x18\x04 \x01(\x0b\x32\x14.google.protobuf.Any\"c\n\x15\x46ilterSyntaxException\x12\x11\n\tbeginLine\x18\x01 \x01(\x05\x12\x13\n\x0b\x62\x65ginColumn\x18\x02 \x01(\x05\x12\x0f\n\x07\x65ndLine\x18\x03 \x01(\x05\x12\x11\n\tendColumn\x18\x04 \x01(\x05\x42!\n\rorg.yamcs.apiB\x0e\x45xceptionProtoP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'yamcs.api.exception_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\rorg.yamcs.apiB\016ExceptionProtoP\001'
  _globals['_EXCEPTIONMESSAGE']._serialized_start=67
  _globals['_EXCEPTIONMESSAGE']._serialized_end=164
  _globals['_FILTERSYNTAXEXCEPTION']._serialized_start=166
  _globals['_FILTERSYNTAXEXCEPTION']._serialized_end=265
# @@protoc_insertion_point(module_scope)
