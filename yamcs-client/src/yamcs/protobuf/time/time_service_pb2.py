# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: yamcs/protobuf/time/time_service.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'yamcs/protobuf/time/time_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from yamcs.api import annotations_pb2 as yamcs_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&yamcs/protobuf/time/time_service.proto\x12\x13yamcs.protobuf.time\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1byamcs/api/annotations.proto\"\xb1\x01\n\x10LeapSecondsTable\x12\x43\n\x06ranges\x18\x01 \x03(\x0b\x32\x33.yamcs.protobuf.time.LeapSecondsTable.ValidityRange\x1aX\n\rValidityRange\x12\r\n\x05start\x18\x01 \x01(\t\x12\x0c\n\x04stop\x18\x02 \x01(\t\x12\x13\n\x0bleapSeconds\x18\x03 \x01(\x05\x12\x15\n\rtaiDifference\x18\x04 \x01(\x05\"q\n\x0eSetTimeRequest\x12\x10\n\x08instance\x18\x06 \x01(\t\x12)\n\x05time0\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\x0b\x65lapsedTime\x18\x03 \x01(\x03\x12\r\n\x05speed\x18\x04 \x01(\x01\";\n\x14SubscribeTimeRequest\x12\x10\n\x08instance\x18\x01 \x01(\t\x12\x11\n\tprocessor\x18\x02 \x01(\t\";\n\x08TimeInfo\x12/\n\x0b\x63urrentTime\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp2\xcd\x02\n\x07TimeApi\x12h\n\x0eGetLeapSeconds\x12\x16.google.protobuf.Empty\x1a%.yamcs.protobuf.time.LeapSecondsTable\"\x17\x8a\x92\x03\x13\n\x11/api/leap-seconds\x12r\n\x07SetTime\x12#.yamcs.protobuf.time.SetTimeRequest\x1a\x16.google.protobuf.Empty\"*\x8a\x92\x03&\x1a!/api/instances/{instance}:setTime:\x01*\x12\x64\n\rSubscribeTime\x12).yamcs.protobuf.time.SubscribeTimeRequest\x1a\x1a.google.protobuf.Timestamp\"\n\xda\x92\x03\x06\n\x04time0\x01\x42(\n\x12org.yamcs.protobufB\x10TimeServiceProtoP\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'yamcs.protobuf.time.time_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\022org.yamcs.protobufB\020TimeServiceProtoP\001'
  _globals['_TIMEAPI'].methods_by_name['GetLeapSeconds']._loaded_options = None
  _globals['_TIMEAPI'].methods_by_name['GetLeapSeconds']._serialized_options = b'\212\222\003\023\n\021/api/leap-seconds'
  _globals['_TIMEAPI'].methods_by_name['SetTime']._loaded_options = None
  _globals['_TIMEAPI'].methods_by_name['SetTime']._serialized_options = b'\212\222\003&\032!/api/instances/{instance}:setTime:\001*'
  _globals['_TIMEAPI'].methods_by_name['SubscribeTime']._loaded_options = None
  _globals['_TIMEAPI'].methods_by_name['SubscribeTime']._serialized_options = b'\332\222\003\006\n\004time'
  _globals['_LEAPSECONDSTABLE']._serialized_start=155
  _globals['_LEAPSECONDSTABLE']._serialized_end=332
  _globals['_LEAPSECONDSTABLE_VALIDITYRANGE']._serialized_start=244
  _globals['_LEAPSECONDSTABLE_VALIDITYRANGE']._serialized_end=332
  _globals['_SETTIMEREQUEST']._serialized_start=334
  _globals['_SETTIMEREQUEST']._serialized_end=447
  _globals['_SUBSCRIBETIMEREQUEST']._serialized_start=449
  _globals['_SUBSCRIBETIMEREQUEST']._serialized_end=508
  _globals['_TIMEINFO']._serialized_start=510
  _globals['_TIMEINFO']._serialized_end=569
  _globals['_TIMEAPI']._serialized_start=572
  _globals['_TIMEAPI']._serialized_end=905
# @@protoc_insertion_point(module_scope)
